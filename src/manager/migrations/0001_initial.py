# Generated by Django 3.0.2 on 2020-01-15 17:12

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Project Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Project Slug')),
                ('short_name', models.CharField(blank=True, max_length=300, null=True, verbose_name='Project Short Name')),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data Server was Created')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Last Edited')),
                ('last_reviewed', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=400, unique=True, verbose_name='Server Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Server Slug')),
                ('ip_address', models.GenericIPAddressField(verbose_name='Server IP Address')),
                ('fqdn', models.CharField(blank=True, help_text='Enter FQDN', max_length=300, null=True, verbose_name='FQDN')),
                ('script', models.URLField(blank=True, help_text='Enter the URL of the BitBucket Repo', max_length=1000, null=True, verbose_name='Script BitBucket Url')),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data Server was Created')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Last Edited')),
                ('last_reviewed', models.DateTimeField(blank=True, null=True)),
                ('project', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='manager.Project', verbose_name='Associated Project')),
            ],
            options={
                'verbose_name': 'Server',
                'verbose_name_plural': 'Servers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=300, unique=True, verbose_name='Team Name')),
                ('slug', models.SlugField(unique=True, verbose_name='Team Slug')),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Data Server was Created')),
                ('updated', models.DateTimeField(auto_now_add=True, verbose_name='Last Edited')),
                ('last_reviewed', models.DateTimeField(blank=True, null=True)),
                ('projects', models.ManyToManyField(blank=True, related_name='_team_projects_+', to='manager.Project', verbose_name='Associated Projects')),
                ('servers', models.ManyToManyField(blank=True, related_name='_team_servers_+', to='manager.Server', verbose_name='Associated Servers')),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='server',
            name='teams',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='manager.Team', verbose_name='Associated Team'),
        ),
        migrations.AddField(
            model_name='project',
            name='servers',
            field=models.ManyToManyField(blank=True, related_name='_project_servers_+', to='manager.Server'),
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('added_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='book_add', to=settings.AUTH_USER_MODEL)),
                ('last_edited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='book_edit', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp', '-updated'],
            },
        ),
    ]
